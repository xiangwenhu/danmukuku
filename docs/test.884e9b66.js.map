{"version":3,"sources":["lib/util.ts","lib/traceManager.ts","lib/factory.ts","lib/queue.ts","lib/index.ts","test.ts"],"names":[],"mappings":"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","file":"test.884e9b66.js","sourceRoot":"..","sourcesContent":["const { getComputedStyle } = window;\r\n\r\nexport function pxToNumer(v: string) {\r\n    return +v.replace(\"px\", \"\");\r\n}\r\n\r\nexport function pxToRem(pxValue, digits = 2) {\r\n    const fontSize = pxToNumer(getComputedStyle(document.documentElement).fontSize);\r\n    return +(pxValue / fontSize).toFixed(digits);\r\n}\r\n\r\nexport function getRemValue() {\r\n    return pxToNumer(getComputedStyle(document.documentElement).fontSize);\r\n}\r\n\r\nexport function get2DTranslate(el) {\r\n    const ts = getComputedStyle(el).transform;\r\n    if (ts === \"none\") {\r\n        return {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n    }\r\n    const tsl = ts.match(/matrix\\((.*)\\)/)[1].split(\",\");\r\n    return {\r\n        x: +tsl[4].trim(),\r\n        y: +tsl[5].trim()\r\n    };\r\n}\r\n\r\nexport function measureElement(tag: string, className: string, parent: HTMLElement = document.body) {\r\n    const el = document.createElement(tag);\r\n    el.className = className;\r\n    // 考虑letter Space\r\n    el.innerHTML = \"啊啊\";\r\n    el.style.cssText = \"position:absolute; visibility:hidden\";\r\n    parent.appendChild(el);\r\n\r\n    const cstyle = getComputedStyle(el);\r\n\r\n    const borderWidth = pxToNumer(cstyle.borderLeftWidth) + pxToNumer(cstyle.borderRightWidth);\r\n    const paddingWidth = pxToNumer(cstyle.paddingLeft) + pxToNumer(cstyle.paddingRight);\r\n    const marginWidth = pxToNumer(cstyle.marginLeft) + pxToNumer(cstyle.marginRight);\r\n\r\n    const borderHeight = pxToNumer(cstyle.borderTopWidth) + pxToNumer(cstyle.borderBottomWidth);\r\n    const paddingHeight = pxToNumer(cstyle.paddingTop) + pxToNumer(cstyle.paddingBottom);\r\n    const marginHeight = pxToNumer(cstyle.marginTop) + pxToNumer(cstyle.marginBottom);\r\n\r\n    const width = pxToNumer(cstyle.width);\r\n    const height = pxToNumer(cstyle.height);\r\n\r\n    const outerWidth = borderWidth + paddingWidth + marginWidth;\r\n    const outerHeight = borderHeight + paddingHeight + marginHeight;\r\n    console.log(outerWidth, width);\r\n    parent.removeChild(el);\r\n    return {\r\n        outerWidth,\r\n        outerHeight,\r\n        letterWidth: width / 2,\r\n        height\r\n    };\r\n}\r\n","export enum TraceStrategy {\r\n    radom = \"random\",\r\n    quque = \"queque\"\r\n}\r\n\r\nexport interface TraceMangerOption {\r\n    height: number;\r\n    width: number;\r\n    traceHeight: number;\r\n}\r\n\r\ninterface Trace {\r\n    tail: number;\r\n    y: number;\r\n}\r\n\r\nclass TraceManager {\r\n    private option: TraceMangerOption;\r\n    public traces: Trace[];\r\n    private period: number;\r\n    private xaxis: number;\r\n    constructor(option: TraceMangerOption) {\r\n        this.option = option;\r\n        this.period = 0;\r\n        this.traces = [];\r\n        this.createTraces();\r\n        this.xaxis = 0;\r\n    }\r\n\r\n    increasePeriod() {\r\n        this.period++;\r\n        this.xaxis += this.option.width;\r\n    }\r\n\r\n    get traceCount() {\r\n        return this.traces.length;\r\n    }\r\n\r\n    createTraces() {\r\n        const traces = [];\r\n\r\n        const { height, traceHeight } = this.option;\r\n        const count = ~~(height / traceHeight);\r\n        for (let i = 0; i < count; i++) {\r\n            traces.push({\r\n                tail: 0,\r\n                y: traceHeight * i\r\n            });\r\n        }\r\n        this.traces = traces;\r\n    }\r\n\r\n    reset() {\r\n        this.period = 0;\r\n        this.traces = [];\r\n        this.createTraces();\r\n        this.xaxis = 0;\r\n    }\r\n\r\n    resize(option: TraceMangerOption) {\r\n        this.option = option;\r\n        const { traces } = this;\r\n        const oldTraceCount = traces.length;\r\n        const { height, traceHeight } = this.option;\r\n        const count = ~~(height / traceHeight);\r\n\r\n        if (count === oldTraceCount) {\r\n            return;\r\n        }\r\n\r\n        if (count < oldTraceCount) {\r\n            traces.splice(count);\r\n            return;\r\n        }\r\n\r\n        const index = this.findTraceIndex();\r\n        const baseValue = index >= 0 ? traces[index].tail : 0;\r\n\r\n        for (let i = oldTraceCount - 1; i < count; i++) {\r\n            traces.push({\r\n                tail: baseValue,\r\n                y: traceHeight * i\r\n            });\r\n        }\r\n    }\r\n\r\n    get() {\r\n        const index = this.findTraceIndex();\r\n        const trace = this.traces[index];\r\n        return {\r\n            index,\r\n            y: trace.y\r\n        };\r\n    }\r\n\r\n    set(index: number, x: number, len: number) {\r\n        const trace = this.traces[index];\r\n        trace.tail = this.xaxis + x + len;\r\n    }\r\n\r\n    findTraceIndex() {\r\n        const tv = this.traces.map(t => t.tail);\r\n        const min = Math.min(...tv);\r\n        const index = this.traces.findIndex(t => t.tail === min);\r\n        return index;\r\n    }\r\n}\r\n\r\nexport default TraceManager;\r\n","import { measureElement, get2DTranslate } from \"./util\";\r\nimport TraceManager from \"./traceManager\";\r\nimport { DanmuItem } from \"./index\";\r\n\r\nexport interface FactoryOption {\r\n    reuse?: boolean;\r\n    duration?: number;\r\n    checkPeriod?: number;\r\n    useMeasure?: boolean;\r\n    slideRatio?: number;\r\n}\r\n\r\nconst DEFAULT_OPTION = {\r\n    reuse: false,\r\n    duration: 10000,\r\n    checkPeriod: 1000,\r\n    useMeasure: false,\r\n    slideRatio: 4\r\n};\r\n\r\nconst DEFAULT_DANMU_CLASS = \"danmu-item\";\r\nconst MIN_SLIDE_LENGTH = 2.5;\r\n\r\nclass Factory {\r\n    private wrapper: HTMLElement;\r\n    private frame1: HTMLDivElement;\r\n    private frame2: HTMLDivElement;\r\n    private sample: HTMLDivElement;\r\n    private HEIGHT: number;\r\n    private WIDTH: number;\r\n    private animatingTime: number;\r\n    private rect: ClientRect;\r\n    private option: FactoryOption;\r\n    private clearTicket: number;\r\n    private pausedTime: number;\r\n    public status: number;\r\n    private traceManager: TraceManager;\r\n    private baseMeasure: any;\r\n\r\n    constructor(container: HTMLElement) {\r\n        this.wrapper = container;\r\n        this.sample = document.createElement(\"div\");\r\n        this.sample.className = DEFAULT_DANMU_CLASS;\r\n        this.rect = this.wrapper.getBoundingClientRect();\r\n        this.HEIGHT = this.wrapper.clientHeight;\r\n        this.WIDTH = this.wrapper.clientWidth;\r\n    }\r\n\r\n    getTraceHeight() {\r\n        this.baseMeasure = measureElement(\"div\", DEFAULT_DANMU_CLASS, this.wrapper);\r\n        return this.baseMeasure.outerHeight + this.baseMeasure.height;\r\n    }\r\n\r\n    init(option: FactoryOption = DEFAULT_OPTION) {\r\n        const { HEIGHT, WIDTH } = this;\r\n        this.option = Object.assign(DEFAULT_OPTION, option);\r\n        this.createFrames(this.wrapper);\r\n        this.recycle();\r\n        const traceHeight = this.getTraceHeight();\r\n        this.traceManager = new TraceManager({\r\n            height: HEIGHT,\r\n            width: (WIDTH * this.option.slideRatio) / 2,\r\n            traceHeight\r\n        });\r\n    }\r\n\r\n    resize(option: FactoryOption) {\r\n        window.getComputedStyle(this.wrapper).height;\r\n        this.rect = this.wrapper.getBoundingClientRect();\r\n        console.log(this.wrapper.clientHeight, this.wrapper.clientWidth);\r\n        this.HEIGHT = this.wrapper.clientHeight;\r\n        this.WIDTH = this.wrapper.clientWidth;\r\n        const traceHeight = this.getTraceHeight();\r\n        this.traceManager.resize({\r\n            height: this.HEIGHT,\r\n            width: (this.WIDTH * this.option.slideRatio) / 2,\r\n            traceHeight\r\n        });\r\n        this.frame2.style.animationDuration = option.duration * 2 + \"ms\";\r\n        this.frame1.style.animationDuration = option.duration * 2 + \"ms\";\r\n        // TODO:: 计算\r\n        this.animatingTime = Date.now();\r\n\r\n        this.option.duration = option.duration;\r\n    }\r\n\r\n    start() {\r\n        if (this.frame1.classList.contains(\"danmu-animation-1\")) {\r\n            console.log(\"already started...\");\r\n            return;\r\n        }\r\n\r\n        this.frame1.classList.add(\"danmu-animation-1\");\r\n        this.animatingTime = Date.now();\r\n        this.status = 1;\r\n        this.traceManager.reset();\r\n    }\r\n\r\n    stop() {\r\n        this.status = 0;\r\n        this.clearTicket && clearInterval(this.clearTicket);\r\n\r\n        if (this.frame1) {\r\n            this.frame1.classList.remove(\"danmu-animation-1\", \"danmu-animation-2\");\r\n            this.frame1.innerHTML = \"\";\r\n            // 复位\r\n            this.frame1.getBoundingClientRect();\r\n        }\r\n        if (this.frame2) {\r\n            this.frame2.classList.remove(\"danmu-animation-1\", \"danmu-animation-2\");\r\n            this.frame2.innerHTML = \"\";\r\n            // 复位\r\n            this.frame2.getBoundingClientRect();\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (!this.frame1) {\r\n            return;\r\n        }\r\n        this.frame1.style.animationPlayState = \"paused\";\r\n        if (!this.frame2) {\r\n            return;\r\n        }\r\n        this.frame2.style.animationPlayState = \"paused\";\r\n        this.pausedTime = Date.now();\r\n        this.status = 3;\r\n    }\r\n\r\n    continue() {\r\n        if (!this.frame1) {\r\n            return;\r\n        }\r\n        this.frame1.style.animationPlayState = \"running\";\r\n        if (!this.frame2) {\r\n            return;\r\n        }\r\n        this.frame2.style.animationPlayState = \"running\";\r\n        this.animatingTime += Date.now() - this.pausedTime;\r\n        this.pausedTime = 0;\r\n        this.status = 1;\r\n    }\r\n\r\n    getCurrentX(el: HTMLElement) {\r\n        // const { duration } = this.option;\r\n        //const x = ((Date.now() - this.animatingTime) / (duration * 2)) * this.WIDTH * 2;\r\n        const { x } = get2DTranslate(el);\r\n        return -x;\r\n    }\r\n\r\n    getElementLength(item: DanmuItem, el: HTMLElement) {\r\n        const { useMeasure } = this.option;\r\n        const { forceDetect, render, content } = item;\r\n        if (!useMeasure || forceDetect || render) {\r\n            return el.getBoundingClientRect().width;\r\n        }\r\n        if (useMeasure) {\r\n            const { baseMeasure } = this;\r\n            return content.length * baseMeasure.letterWidth + baseMeasure.outerWidth;\r\n        }\r\n    }\r\n\r\n    getTraceInfo(item: DanmuItem) {\r\n        if (item.trace) {\r\n            const index = Math.min(item.trace, this.traceManager.traceCount - 1);\r\n            return {\r\n                index,\r\n                y: this.traceManager.traces[index].y\r\n            };\r\n        }\r\n\r\n        return this.traceManager.get();\r\n    }\r\n\r\n    sendDanmu(queue: DanmuItem[]) {\r\n        if (this.status !== 1 || queue.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        const el = document.querySelector(\".danmu-animation-1\") as HTMLDivElement;\r\n        if (!el) {\r\n            return;\r\n        }\r\n        const { traceManager } = this;\r\n        const poolItems = el.querySelectorAll(\".danmu-item.hide\");\r\n        const poolLength = poolItems.length;\r\n        const x = this.getCurrentX(el);\r\n        // 先利用资源池\r\n        if (poolLength > 0) {\r\n            const realLength = Math.min(queue.length, poolLength);\r\n            let newItem = null;\r\n            for (let index = 0; index < realLength; index++) {\r\n                const item = queue[index];\r\n                const { index: traceIndex, y: top } = this.getTraceInfo(item);\r\n                newItem = poolItems[index] as HTMLDivElement;\r\n                newItem.class = DEFAULT_DANMU_CLASS;\r\n                newItem.innerHTML = item.content;\r\n                newItem.style.cssText = `top:${top}px;left:${x}px;${item.style || \"\"}`;\r\n                if (item.className) {\r\n                    newItem.classList.add(item.className);\r\n                }\r\n                traceManager.set(traceIndex, x, this.getElementLength(item, newItem));\r\n            }\r\n            queue.splice(0, realLength);\r\n        }\r\n\r\n        // 然后创建新节点\r\n        if (queue.length > 0) {\r\n            // const frament = document.createDocumentFragment();\r\n            const newItems = queue.map(item => {\r\n                const { index: traceIndex, y: top } = this.getTraceInfo(item);\r\n                const newItem = this.createDanmuItem(item, x, top);\r\n                el.appendChild(newItem);\r\n                traceManager.set(traceIndex, x, this.getElementLength(item, newItem));\r\n                return el;\r\n                // return newItem;\r\n            });\r\n            // .forEach(item => frament.appendChild(item));\r\n            // el.appendChild(frament);\r\n            queue.splice(0);\r\n        }\r\n    }\r\n\r\n    createFrames(wrapper: HTMLElement) {\r\n        const { duration, slideRatio } = this.option;\r\n        const frame1: HTMLDivElement = document.createElement(\"div\");\r\n        frame1.className = \"danmu-frame \";\r\n        frame1.style.animationDuration = duration * 2 + \"ms\";\r\n        frame1.id = \"frames_frame1\";\r\n        const frame2 = frame1.cloneNode() as HTMLDivElement;\r\n        frame2.style.animationDuration = duration * 2 + \"ms\";\r\n        frame2.id = \"frames_frame2\";\r\n\r\n        if (slideRatio) {\r\n            const rate = Math.max(MIN_SLIDE_LENGTH, slideRatio);\r\n            frame1.style.width = `${rate * 100}%`;\r\n            frame2.style.width = `${rate * 100}%`;\r\n        }\r\n\r\n        wrapper.appendChild(frame1);\r\n        wrapper.appendChild(frame2);\r\n\r\n        this.frame1 = frame1;\r\n        this.frame2 = frame2;\r\n\r\n        this.resgisterAnimationEvents();\r\n    }\r\n\r\n    createDanmuItem(item: DanmuItem, left: number, top?: number) {\r\n        let el = item.render && this.createDanmuWithRender(item, left, top);\r\n        if (el) {\r\n            return el;\r\n        }\r\n\r\n        const { top: t, left: l } = this.getNewTopLeft(left, top);\r\n        el = this.sample.cloneNode() as HTMLElement;\r\n        el.innerHTML = item.content;\r\n        el.dataset.tLength = item.content.length + \"\";\r\n        el.style.cssText = `top:${t}px;left:${l}px;${item.style || \"\"}`;\r\n        if (item.className) {\r\n            el.classList.add(item.className);\r\n        }\r\n        return el;\r\n    }\r\n\r\n    createDanmuWithRender(item: DanmuItem, left: number, top?: number) {\r\n        const data = { left, top, class: item.className, style: item.style };\r\n        if (typeof item.render === \"function\") {\r\n            const el = item.render(data);\r\n            if (el instanceof HTMLElement) {\r\n                if(!el.classList.contains(DEFAULT_DANMU_CLASS)){\r\n                    el.classList.add(DEFAULT_DANMU_CLASS);\r\n                }\r\n                return el;\r\n            }\r\n            if (typeof el === \"string\") {\r\n                return this.wrapperHTMLStringDanmu(left, top, item.render);\r\n            }\r\n        } else if (typeof item.render === \"object\" && item.render instanceof HTMLElement) {\r\n            return item.render;\r\n        } else if (typeof item.render === \"string\") {\r\n            return this.wrapperHTMLStringDanmu(left, top, item.render);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    wrapperHTMLStringDanmu(left, top, content) {\r\n        const { top: t, left: l } = this.getNewTopLeft(left, top);\r\n        const el = this.sample.cloneNode() as HTMLElement;\r\n        el.innerHTML = content;\r\n        el.style.cssText = `top:${t}px;left:${l}px;`;\r\n        return el;\r\n    }\r\n\r\n    recycle() {\r\n        const { checkPeriod } = this.option;\r\n        this.clearTicket = setInterval(() => {\r\n            const frame = document.querySelector(\".danmu-animation-2\");\r\n            if (!frame) {\r\n                return;\r\n            }\r\n            const { left, width } = this.rect;\r\n            const right = left + width;\r\n            console.time(\"recycle\");\r\n            const allItems = frame.querySelectorAll(\".danmu-item:not(.hide)\");\r\n            const notInViewItems = Array.from(allItems)\r\n                .slice(0, 120)\r\n                .filter(function(item) {\r\n                    const rect = item.getBoundingClientRect();\r\n                    const b = rect.left + rect.width >= left && rect.left <= right;\r\n                    return !b;\r\n                });\r\n            notInViewItems.forEach((child: HTMLElement) => {\r\n                child.style.cssText = \"\";\r\n                child.classList.add(\"hide\");\r\n            });\r\n            console.timeEnd(\"recycle\");\r\n        }, checkPeriod);\r\n    }\r\n\r\n    getNewTopLeft(left: number, top?: number) {\r\n        return {\r\n            top: top !== undefined ? top : ~~(Math.random() * this.HEIGHT),\r\n            left\r\n        };\r\n    }\r\n\r\n    clearDanmus(el: HTMLDivElement) {\r\n        if (this.option.reuse) {\r\n            el.querySelectorAll(\".danmu-item:not(.hide)\").forEach((child: HTMLElement) => {\r\n                child.classList.add(\"hide\");\r\n                if (child.style.transition) {\r\n                    child.style.transition = null;\r\n                    child.style.transform = null;\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        el.innerHTML = \"\";\r\n    }\r\n\r\n    resgisterAnimationEvents() {\r\n        const { frame1, frame2 } = this;\r\n        this.frame1.addEventListener(\"animationend\", (ev: AnimationEvent) => {\r\n            switch (ev.animationName) {\r\n                case \"animation-stage-1\":\r\n                    this.animatingTime = Date.now();\r\n                    frame1.classList.remove(\"danmu-animation-1\");\r\n                    frame1.classList.add(\"danmu-animation-2\");\r\n                    frame2.classList.add(\"danmu-animation-1\");\r\n\r\n                    frame1.style.zIndex = \"11\";\r\n                    frame2.style.zIndex = \"10\";\r\n                    this.traceManager.increasePeriod();\r\n                    break;\r\n                case \"animation-stage-2\":\r\n                    this.clearDanmus(frame1);\r\n                    frame1.classList.remove(\"danmu-animation-2\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        frame2.addEventListener(\"animationend\", (ev: AnimationEvent) => {\r\n            switch (ev.animationName) {\r\n                case \"animation-stage-1\":\r\n                    this.animatingTime = Date.now();\r\n                    frame2.classList.remove(\"danmu-animation-1\");\r\n                    frame2.classList.add(\"danmu-animation-2\");\r\n                    frame1.classList.add(\"danmu-animation-1\");\r\n\r\n                    frame2.style.zIndex = \"11\";\r\n                    frame1.style.zIndex = \"10\";\r\n                    this.traceManager.increasePeriod();\r\n                    break;\r\n                case \"animation-stage-2\":\r\n                    this.clearDanmus(frame2);\r\n                    frame2.classList.remove(\"danmu-animation-2\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Factory;\r\n","const queue = [];\r\n\r\nconst callBacks = [];\r\nlet requestId: number | null = null;\r\n\r\nexport function dequeue() {\r\n    return queue.splice(0);\r\n}\r\n\r\nexport function enqueue(data: any[]) {\r\n    queue.push(...data);\r\n}\r\n\r\nfunction clear() {\r\n    if (requestId) {\r\n        cancelAnimationFrame(requestId);\r\n    }\r\n}\r\n\r\nfunction startListen() {\r\n    const data = dequeue();\r\n    callBacks.forEach(cb => cb(data));\r\n    requestId = requestAnimationFrame(() => startListen());\r\n}\r\n\r\nexport function addListener(cb: (data: any[]) => void) {\r\n    callBacks.push(cb);\r\n    if(!requestId){\r\n        startListen();\r\n    }\r\n}\r\n\r\nexport function removeListener(cb: Function) {\r\n    const index = callBacks.find(c => c === cb);\r\n    if (index > 0) {\r\n        callBacks.splice(index, 1);\r\n    }\r\n    if (callBacks.length <= 0) {\r\n        clear();\r\n    }\r\n}\r\n","import Factory, { FactoryOption} from \"./factory\";\r\nimport { enqueue, addListener, removeListener } from \"./queue\";\r\n\r\n\r\nexport interface DanmuItem {\r\n    type?: \"common\" | \"fixed\" | \"acc\",\r\n    content?: string;\r\n    forceDetect?: boolean;\r\n    render?: ((any) => HTMLElement) | HTMLElement | string;\r\n    className?: string;\r\n    style?: string;\r\n    acceleration?: number;\r\n    trace?: number;\r\n}\r\n\r\n\r\ntype DanmuContent = string | DanmuItem;\r\n\r\nfunction toDanmuItem(danmu: string | DanmuItem): DanmuItem {\r\n    return typeof danmu === \"string\" ? { content: danmu } : danmu;\r\n}\r\n\r\nexport class DanmuManager {\r\n    private factory: Factory;\r\n    constructor(container: HTMLElement) {\r\n        this.factory = new Factory(container);\r\n        this.batch = this.batch.bind(this);\r\n    }\r\n\r\n    private batch(data: any[]) {\r\n        this.factory.sendDanmu(data);\r\n    }\r\n\r\n    sendDanmu(danmu: DanmuContent[] | DanmuItem | string ) {\r\n        if (this.factory.status !== 1) {\r\n            return;\r\n        }\r\n        let contents: DanmuItem[] = null;\r\n        if (Array.isArray(danmu)) {\r\n            contents = danmu.map((d: DanmuItem | string) => toDanmuItem(d));\r\n        } else {\r\n            contents = [toDanmuItem(danmu)];\r\n        }\r\n\r\n        enqueue(contents);\r\n    }\r\n\r\n    init(option?: FactoryOption) {\r\n        this.factory.init(option);\r\n    }\r\n\r\n    start() {\r\n        this.factory.start();\r\n        addListener(this.batch);\r\n    }\r\n\r\n    stop() {\r\n        this.factory.stop();\r\n        removeListener(this.batch);\r\n    }\r\n\r\n    pause() {\r\n        this.factory.pause();\r\n    }\r\n\r\n    continue() {\r\n        this.factory.continue();\r\n    }\r\n\r\n    resize(option: FactoryOption){\r\n        this.factory.resize(option);\r\n    }    \r\n}\r\n\r\nfunction getDanmuManager(container: HTMLElement): DanmuManager {\r\n    return new DanmuManager(container);\r\n}\r\n\r\nexport default getDanmuManager;\r\n","import getManager, { DanmuManager } from \"./lib/index\";\r\n\r\nconst videoEl = document.querySelector(\"video\");\r\nlet isPlayed = false;\r\nvideoEl.oncanplay = function() {\r\n    if (!isPlayed) {\r\n        isPlayed = true;\r\n    }\r\n};\r\nconst containerEl = document.getElementById(\"container\");\r\nvar manager: DanmuManager | null = null;\r\nmanager = getManager(containerEl);\r\n(window as any).manager = manager;\r\nmanager.init({\r\n    duration: 8000,\r\n    slideRatio: 3,\r\n    useMeasure: true\r\n});\r\nmanager.start();\r\nlet ticket = 0;\r\n\r\nconst pools = [\r\n    { content: \"完结撒花完结撒花完结撒花\", style: \"color:Red\" },\r\n    { content: \"25.5啥的也算一级\", style: \"color:green\" },\r\n    {\r\n        forceDetect: true,\r\n        content:\r\n            \"<img src='//static.hdslb.com/images/member/noface.gif' style='height:20px;vertical-align: middle;'>留下jo印留下jo印留下jo印\"\r\n    },\r\n    { render: \"高价回收天堂之眼，不要问我为什么\" },\r\n    {\r\n        render: ({ left, top }) => {\r\n            const el = document.createElement(\"span\");\r\n            el.innerHTML = \"麦姐在学院除了老大老二基本就是最厉害的了 from span\";\r\n            el.style.left = left + \"px\";\r\n            el.style.top = top + \"px\";\r\n            el.style.zIndex = \"999\";\r\n            el.style.backgroundColor = \"#666\";\r\n            return el;\r\n        }\r\n    },\r\n    // {\r\n    //     content:\r\n    //         \"<img src='https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1565416527128&di=86e45c16db43679153f959bbe08a3f51&imgtype=0&src=http%3A%2F%2Fimg.xinxic.com%2Fimg%2F35167cff7ee71983.jpg' style='height:60px'/>\",\r\n    //     forceDetect: true,\r\n    //     style: \"z-index:99;\"\r\n    // },\r\n    \"好假炮姐当年1v3有一个5的和两个4的都打得过\",\r\n    \"这个女的好帅啊，一拳一个机器人的那个\",\r\n    \"哇喔哇喔哇喔哇喔好燃啊！！！\",\r\n    \"黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴黑琴\",\r\n    { content: \"子弹是金属，枪也是金属，炮姐直接操控啊\", style: \"border:solid 1px blue\" }\r\n];\r\n\r\nfunction getRandomIndex(len: number) {\r\n    return ~~(Math.random() * len);\r\n}\r\n\r\nfunction batchGet(count: number) {\r\n    const r = [];\r\n    const len = pools.length;\r\n    for (let i = 0; i < count; i++) {\r\n        r.push(pools[getRandomIndex(len)]);\r\n    }\r\n    return r;\r\n}\r\n\r\nconst txtIntervalEl = document.getElementById(\"txtInterval\") as HTMLInputElement;\r\nconst txtBatchCount = document.getElementById(\"txtBatchCount\") as HTMLInputElement;\r\nfunction startBatch() {\r\n    const batchCount = +txtBatchCount.value;\r\n    manager.sendDanmu(batchGet(batchCount));\r\n    ticket = setInterval(function() {\r\n        manager.sendDanmu(batchGet(batchCount));\r\n    }, +txtIntervalEl.value);\r\n}\r\n\r\nlet isBigTest = false;\r\nconst txtDanmuEl: HTMLInputElement = document.getElementById(\"txtDanmu\") as HTMLInputElement;\r\ndocument.getElementById(\"btnSend\").addEventListener(\r\n    \"click\",\r\n    ev => {\r\n        manager.sendDanmu(txtDanmuEl.value);\r\n        ev.stopPropagation();\r\n    },\r\n    false\r\n);\r\n\r\ndocument.getElementById(\"btnPause\").addEventListener(\"click\", () => {\r\n    if (isBigTest) {\r\n        clearInterval(ticket);\r\n    }\r\n    manager.pause();\r\n});\r\n\r\ndocument.getElementById(\"btnContiue\").addEventListener(\"click\", () => {\r\n    if (isBigTest) {\r\n        startBatch();\r\n    }\r\n    manager.continue();\r\n});\r\n\r\ndocument.getElementById(\"btnStart\").addEventListener(\"click\", () => {\r\n    manager.start();\r\n});\r\n\r\ndocument.getElementById(\"btnStop\").addEventListener(\"click\", () => {\r\n    manager.stop();\r\n    clearInterval(ticket);\r\n    isBigTest = false;\r\n});\r\n\r\ndocument.getElementById(\"btnBigTest\").addEventListener(\"click\", () => {\r\n    if (isBigTest) {\r\n        return;\r\n    }\r\n    clearInterval(ticket);\r\n    manager.start();\r\n    startBatch();\r\n    isBigTest = true;\r\n});\r\n(function() {\r\n    var script = document.createElement(\"script\");\r\n    script.onload = function() {\r\n        var stats = new window.Stats();\r\n        document.body.appendChild(stats.dom);\r\n        requestAnimationFrame(function loop() {\r\n            stats.update();\r\n            requestAnimationFrame(loop);\r\n        });\r\n    };\r\n    script.src = \"//mrdoob.github.io/stats.js/build/stats.min.js\";\r\n    document.head.appendChild(script);\r\n})();\r\n\r\nconst lbTotal = document.getElementById(\"lbTotal\");\r\nconst lbHide = document.getElementById(\"lbHide\");\r\nconst lbInView = document.getElementById(\"lbInView\");\r\n\r\nconst rect = containerEl.getBoundingClientRect();\r\nconst { left, width } = rect;\r\nconst right = left + width;\r\nsetInterval(function() {\r\n    (window as any).requestIdleCallback(() => {\r\n        const allItems = Array.from(document.querySelectorAll(\".danmu-item\"));\r\n        const len = allItems.length;\r\n        const inHideLen = allItems.filter(item => item.classList.contains(\"hide\")).length;\r\n        const inViewLen = allItems.filter(function(item) {\r\n            const rect = item.getBoundingClientRect();\r\n            const b = !item.classList.contains(\"hide\") && rect.left + rect.width >= left;\r\n            return b;\r\n        }).length;\r\n\r\n        lbTotal.innerText = len + \"\";\r\n        lbHide.innerHTML = inHideLen + \"\";\r\n        lbInView.innerHTML = inViewLen + \"\";\r\n    });\r\n}, 5000);\r\n\r\ndocument.addEventListener(\"visibilitychange\", function() {\r\n    // 用户离开了当前页面\r\n    if (document.visibilityState === \"hidden\") {\r\n        manager.stop();\r\n        console.log(\"stop....\");\r\n        // console.log(document.getElementById(\"frames_frame1\").getBoundingClientRect())\r\n    }\r\n\r\n    // 用户打开或回到页面\r\n    if (document.visibilityState === \"visible\") {\r\n        manager.start();\r\n        console.log(\"start....\");\r\n        // console.log(document.getElementById(\"frames_frame1\").getBoundingClientRect())\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"fullscreenchange\", function() {\r\n    console.log(\"fullscreenchange\");\r\n    if (!document.fullscreenElement) {\r\n        quitFull();\r\n        return;\r\n    }\r\n    goFull();\r\n});\r\n\r\ndocument.getElementById(\"btnFull\").addEventListener(\"click\", ev => {\r\n    ev.stopPropagation();\r\n    document.body.requestFullscreen().then(() => {\r\n        setTimeout(() => {\r\n            goFull();\r\n        }, 0);\r\n    });\r\n});\r\n\r\nfunction goFull() {\r\n    containerEl.classList.add(\"fullScreen\");\r\n    videoEl.classList.add(\"fullScreen\");\r\n    videoEl.setAttribute(\"webkit-playsinline\", \"\");\r\n    videoEl.setAttribute(\"playsinline\", \"\");\r\n\r\n    manager.resize({\r\n        duration: 10000\r\n    });\r\n}\r\n\r\nfunction quitFull() {\r\n    containerEl.style.width = \"1349px\";\r\n    containerEl.style.height = \"758px\";\r\n    containerEl.classList.remove(\"fullScreen\");\r\n    videoEl.classList.remove(\"fullScreen\");\r\n    manager.resize({\r\n        duration: 8000\r\n    });\r\n}\r\n"]}